name: Docker Build and Terraform Apply

on:
  push:
    branches:
      - main 

jobs:
  build-docker:
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    steps:
    - name: Checkout Code
      uses: actions/checkout@v2

    - name: Login to AWS ECR
      id: login-ecr
      run: |
        aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws/t2a7r0x0

    - name: Build and Push Docker Image
      run: |
        docker build -t leeva:latest .
        docker tag leeva:latest public.ecr.aws/t2a7r0x0/my-public-repo:latest
        docker push public.ecr.aws/t2a7r0x0/my-public-repo:latest

  deploy-terraform:
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    needs: [build-docker]
    steps:
    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 0.14.9

    - name: Initialize Terraform
      run: terraform init

    - name: Plan Infrastructure Changes
      run: terraform plan

    - name: "Manual Approval for Terraform"
      id: terraform-approval
      run: echo "::set-output name=approved::false"  # Defina como 'true' manualmente após revisar o plano Terraform

    - name: Apply Infrastructure Changes
      if: steps.terraform-approval.outputs.approved == 'true'
      run: terraform apply -auto-approve

    - name: Destroy Infrastructure
      if: steps.terraform-approval.outputs.approved == 'true'  # Execute apenas se a aprovação manual for 'true'##########
      run: terraform destroy -auto-approve


